/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"

#import "EDAMTypes.h"
#import "EDAMErrors.h"

@interface EDAMPublicUserInfo : NSObject <NSCoding> {
  EDAMUserID __userId;
  NSString * __shardId;
  int __privilege;
  NSString * __username;
  NSString * __noteStoreUrl;
  NSString * __webApiUrlPrefix;

  BOOL __userId_isset;
  BOOL __shardId_isset;
  BOOL __privilege_isset;
  BOOL __username_isset;
  BOOL __noteStoreUrl_isset;
  BOOL __webApiUrlPrefix_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=userId, setter=setUserId:) EDAMUserID userId;
@property (nonatomic, retain, getter=shardId, setter=setShardId:) NSString * shardId;
@property (nonatomic, getter=privilege, setter=setPrivilege:) int privilege;
@property (nonatomic, retain, getter=username, setter=setUsername:) NSString * username;
@property (nonatomic, retain, getter=noteStoreUrl, setter=setNoteStoreUrl:) NSString * noteStoreUrl;
@property (nonatomic, retain, getter=webApiUrlPrefix, setter=setWebApiUrlPrefix:) NSString * webApiUrlPrefix;
#endif

- (id) init;
- (id) initWithUserId: (EDAMUserID) userId shardId: (NSString *) shardId privilege: (int) privilege username: (NSString *) username noteStoreUrl: (NSString *) noteStoreUrl webApiUrlPrefix: (NSString *) webApiUrlPrefix;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

#if !__has_feature(objc_arc)
- (EDAMUserID) userId;
- (void) setUserId: (EDAMUserID) userId;
#endif
- (BOOL) userIdIsSet;

#if !__has_feature(objc_arc)
- (NSString *) shardId;
- (void) setShardId: (NSString *) shardId;
#endif
- (BOOL) shardIdIsSet;

#if !__has_feature(objc_arc)
- (int) privilege;
- (void) setPrivilege: (int) privilege;
#endif
- (BOOL) privilegeIsSet;

#if !__has_feature(objc_arc)
- (NSString *) username;
- (void) setUsername: (NSString *) username;
#endif
- (BOOL) usernameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) noteStoreUrl;
- (void) setNoteStoreUrl: (NSString *) noteStoreUrl;
#endif
- (BOOL) noteStoreUrlIsSet;

#if !__has_feature(objc_arc)
- (NSString *) webApiUrlPrefix;
- (void) setWebApiUrlPrefix: (NSString *) webApiUrlPrefix;
#endif
- (BOOL) webApiUrlPrefixIsSet;

@end

@interface EDAMAuthenticationResult : NSObject <NSCoding> {
  EDAMTimestamp __currentTime;
  NSString * __authenticationToken;
  EDAMTimestamp __expiration;
  EDAMUser * __user;
  EDAMPublicUserInfo * __publicUserInfo;
  NSString * __noteStoreUrl;
  NSString * __webApiUrlPrefix;
  BOOL __secondFactorRequired;
  NSString * __secondFactorDeliveryHint;

  BOOL __currentTime_isset;
  BOOL __authenticationToken_isset;
  BOOL __expiration_isset;
  BOOL __user_isset;
  BOOL __publicUserInfo_isset;
  BOOL __noteStoreUrl_isset;
  BOOL __webApiUrlPrefix_isset;
  BOOL __secondFactorRequired_isset;
  BOOL __secondFactorDeliveryHint_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=currentTime, setter=setCurrentTime:) EDAMTimestamp currentTime;
@property (nonatomic, retain, getter=authenticationToken, setter=setAuthenticationToken:) NSString * authenticationToken;
@property (nonatomic, getter=expiration, setter=setExpiration:) EDAMTimestamp expiration;
@property (nonatomic, retain, getter=user, setter=setUser:) EDAMUser * user;
@property (nonatomic, retain, getter=publicUserInfo, setter=setPublicUserInfo:) EDAMPublicUserInfo * publicUserInfo;
@property (nonatomic, retain, getter=noteStoreUrl, setter=setNoteStoreUrl:) NSString * noteStoreUrl;
@property (nonatomic, retain, getter=webApiUrlPrefix, setter=setWebApiUrlPrefix:) NSString * webApiUrlPrefix;
@property (nonatomic, getter=secondFactorRequired, setter=setSecondFactorRequired:) BOOL secondFactorRequired;
@property (nonatomic, retain, getter=secondFactorDeliveryHint, setter=setSecondFactorDeliveryHint:) NSString * secondFactorDeliveryHint;
#endif

- (id) init;
- (id) initWithCurrentTime: (EDAMTimestamp) currentTime authenticationToken: (NSString *) authenticationToken expiration: (EDAMTimestamp) expiration user: (EDAMUser *) user publicUserInfo: (EDAMPublicUserInfo *) publicUserInfo noteStoreUrl: (NSString *) noteStoreUrl webApiUrlPrefix: (NSString *) webApiUrlPrefix secondFactorRequired: (BOOL) secondFactorRequired secondFactorDeliveryHint: (NSString *) secondFactorDeliveryHint;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

#if !__has_feature(objc_arc)
- (EDAMTimestamp) currentTime;
- (void) setCurrentTime: (EDAMTimestamp) currentTime;
#endif
- (BOOL) currentTimeIsSet;

#if !__has_feature(objc_arc)
- (NSString *) authenticationToken;
- (void) setAuthenticationToken: (NSString *) authenticationToken;
#endif
- (BOOL) authenticationTokenIsSet;

#if !__has_feature(objc_arc)
- (EDAMTimestamp) expiration;
- (void) setExpiration: (EDAMTimestamp) expiration;
#endif
- (BOOL) expirationIsSet;

#if !__has_feature(objc_arc)
- (EDAMUser *) user;
- (void) setUser: (EDAMUser *) user;
#endif
- (BOOL) userIsSet;

#if !__has_feature(objc_arc)
- (EDAMPublicUserInfo *) publicUserInfo;
- (void) setPublicUserInfo: (EDAMPublicUserInfo *) publicUserInfo;
#endif
- (BOOL) publicUserInfoIsSet;

#if !__has_feature(objc_arc)
- (NSString *) noteStoreUrl;
- (void) setNoteStoreUrl: (NSString *) noteStoreUrl;
#endif
- (BOOL) noteStoreUrlIsSet;

#if !__has_feature(objc_arc)
- (NSString *) webApiUrlPrefix;
- (void) setWebApiUrlPrefix: (NSString *) webApiUrlPrefix;
#endif
- (BOOL) webApiUrlPrefixIsSet;

#if !__has_feature(objc_arc)
- (BOOL) secondFactorRequired;
- (void) setSecondFactorRequired: (BOOL) secondFactorRequired;
#endif
- (BOOL) secondFactorRequiredIsSet;

#if !__has_feature(objc_arc)
- (NSString *) secondFactorDeliveryHint;
- (void) setSecondFactorDeliveryHint: (NSString *) secondFactorDeliveryHint;
#endif
- (BOOL) secondFactorDeliveryHintIsSet;

@end

@interface EDAMBootstrapSettings : NSObject <NSCoding> {
  NSString * __serviceHost;
  NSString * __marketingUrl;
  NSString * __supportUrl;
  NSString * __accountEmailDomain;
  BOOL __enableFacebookSharing;
  BOOL __enableGiftSubscriptions;
  BOOL __enableSupportTickets;
  BOOL __enableSharedNotebooks;
  BOOL __enableSingleNoteSharing;
  BOOL __enableSponsoredAccounts;
  BOOL __enableTwitterSharing;
  BOOL __enableLinkedInSharing;
  BOOL __enablePublicNotebooks;

  BOOL __serviceHost_isset;
  BOOL __marketingUrl_isset;
  BOOL __supportUrl_isset;
  BOOL __accountEmailDomain_isset;
  BOOL __enableFacebookSharing_isset;
  BOOL __enableGiftSubscriptions_isset;
  BOOL __enableSupportTickets_isset;
  BOOL __enableSharedNotebooks_isset;
  BOOL __enableSingleNoteSharing_isset;
  BOOL __enableSponsoredAccounts_isset;
  BOOL __enableTwitterSharing_isset;
  BOOL __enableLinkedInSharing_isset;
  BOOL __enablePublicNotebooks_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=serviceHost, setter=setServiceHost:) NSString * serviceHost;
@property (nonatomic, retain, getter=marketingUrl, setter=setMarketingUrl:) NSString * marketingUrl;
@property (nonatomic, retain, getter=supportUrl, setter=setSupportUrl:) NSString * supportUrl;
@property (nonatomic, retain, getter=accountEmailDomain, setter=setAccountEmailDomain:) NSString * accountEmailDomain;
@property (nonatomic, getter=enableFacebookSharing, setter=setEnableFacebookSharing:) BOOL enableFacebookSharing;
@property (nonatomic, getter=enableGiftSubscriptions, setter=setEnableGiftSubscriptions:) BOOL enableGiftSubscriptions;
@property (nonatomic, getter=enableSupportTickets, setter=setEnableSupportTickets:) BOOL enableSupportTickets;
@property (nonatomic, getter=enableSharedNotebooks, setter=setEnableSharedNotebooks:) BOOL enableSharedNotebooks;
@property (nonatomic, getter=enableSingleNoteSharing, setter=setEnableSingleNoteSharing:) BOOL enableSingleNoteSharing;
@property (nonatomic, getter=enableSponsoredAccounts, setter=setEnableSponsoredAccounts:) BOOL enableSponsoredAccounts;
@property (nonatomic, getter=enableTwitterSharing, setter=setEnableTwitterSharing:) BOOL enableTwitterSharing;
@property (nonatomic, getter=enableLinkedInSharing, setter=setEnableLinkedInSharing:) BOOL enableLinkedInSharing;
@property (nonatomic, getter=enablePublicNotebooks, setter=setEnablePublicNotebooks:) BOOL enablePublicNotebooks;
#endif

- (id) init;
- (id) initWithServiceHost: (NSString *) serviceHost marketingUrl: (NSString *) marketingUrl supportUrl: (NSString *) supportUrl accountEmailDomain: (NSString *) accountEmailDomain enableFacebookSharing: (BOOL) enableFacebookSharing enableGiftSubscriptions: (BOOL) enableGiftSubscriptions enableSupportTickets: (BOOL) enableSupportTickets enableSharedNotebooks: (BOOL) enableSharedNotebooks enableSingleNoteSharing: (BOOL) enableSingleNoteSharing enableSponsoredAccounts: (BOOL) enableSponsoredAccounts enableTwitterSharing: (BOOL) enableTwitterSharing enableLinkedInSharing: (BOOL) enableLinkedInSharing enablePublicNotebooks: (BOOL) enablePublicNotebooks;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

#if !__has_feature(objc_arc)
- (NSString *) serviceHost;
- (void) setServiceHost: (NSString *) serviceHost;
#endif
- (BOOL) serviceHostIsSet;

#if !__has_feature(objc_arc)
- (NSString *) marketingUrl;
- (void) setMarketingUrl: (NSString *) marketingUrl;
#endif
- (BOOL) marketingUrlIsSet;

#if !__has_feature(objc_arc)
- (NSString *) supportUrl;
- (void) setSupportUrl: (NSString *) supportUrl;
#endif
- (BOOL) supportUrlIsSet;

#if !__has_feature(objc_arc)
- (NSString *) accountEmailDomain;
- (void) setAccountEmailDomain: (NSString *) accountEmailDomain;
#endif
- (BOOL) accountEmailDomainIsSet;

#if !__has_feature(objc_arc)
- (BOOL) enableFacebookSharing;
- (void) setEnableFacebookSharing: (BOOL) enableFacebookSharing;
#endif
- (BOOL) enableFacebookSharingIsSet;

#if !__has_feature(objc_arc)
- (BOOL) enableGiftSubscriptions;
- (void) setEnableGiftSubscriptions: (BOOL) enableGiftSubscriptions;
#endif
- (BOOL) enableGiftSubscriptionsIsSet;

#if !__has_feature(objc_arc)
- (BOOL) enableSupportTickets;
- (void) setEnableSupportTickets: (BOOL) enableSupportTickets;
#endif
- (BOOL) enableSupportTicketsIsSet;

#if !__has_feature(objc_arc)
- (BOOL) enableSharedNotebooks;
- (void) setEnableSharedNotebooks: (BOOL) enableSharedNotebooks;
#endif
- (BOOL) enableSharedNotebooksIsSet;

#if !__has_feature(objc_arc)
- (BOOL) enableSingleNoteSharing;
- (void) setEnableSingleNoteSharing: (BOOL) enableSingleNoteSharing;
#endif
- (BOOL) enableSingleNoteSharingIsSet;

#if !__has_feature(objc_arc)
- (BOOL) enableSponsoredAccounts;
- (void) setEnableSponsoredAccounts: (BOOL) enableSponsoredAccounts;
#endif
- (BOOL) enableSponsoredAccountsIsSet;

#if !__has_feature(objc_arc)
- (BOOL) enableTwitterSharing;
- (void) setEnableTwitterSharing: (BOOL) enableTwitterSharing;
#endif
- (BOOL) enableTwitterSharingIsSet;

#if !__has_feature(objc_arc)
- (BOOL) enableLinkedInSharing;
- (void) setEnableLinkedInSharing: (BOOL) enableLinkedInSharing;
#endif
- (BOOL) enableLinkedInSharingIsSet;

#if !__has_feature(objc_arc)
- (BOOL) enablePublicNotebooks;
- (void) setEnablePublicNotebooks: (BOOL) enablePublicNotebooks;
#endif
- (BOOL) enablePublicNotebooksIsSet;

@end

@interface EDAMBootstrapProfile : NSObject <NSCoding> {
  NSString * __name;
  EDAMBootstrapSettings * __settings;

  BOOL __name_isset;
  BOOL __settings_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, retain, getter=settings, setter=setSettings:) EDAMBootstrapSettings * settings;
#endif

- (id) init;
- (id) initWithName: (NSString *) name settings: (EDAMBootstrapSettings *) settings;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

#if !__has_feature(objc_arc)
- (EDAMBootstrapSettings *) settings;
- (void) setSettings: (EDAMBootstrapSettings *) settings;
#endif
- (BOOL) settingsIsSet;

@end

@interface EDAMBootstrapInfo : NSObject <NSCoding> {
  NSMutableArray * __profiles;

  BOOL __profiles_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=profiles, setter=setProfiles:) NSMutableArray * profiles;
#endif

- (id) init;
- (id) initWithProfiles: (NSMutableArray *) profiles;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

#if !__has_feature(objc_arc)
- (NSMutableArray *) profiles;
- (void) setProfiles: (NSMutableArray *) profiles;
#endif
- (BOOL) profilesIsSet;

@end

@protocol EDAMUserStore <NSObject>
- (BOOL) checkVersion: (NSString *) clientName edamVersionMajor: (int16_t) edamVersionMajor edamVersionMinor: (int16_t) edamVersionMinor;  // throws TException
- (EDAMBootstrapInfo *) getBootstrapInfo: (NSString *) locale;  // throws TException
- (EDAMAuthenticationResult *) authenticate: (NSString *) username password: (NSString *) password consumerKey: (NSString *) consumerKey consumerSecret: (NSString *) consumerSecret supportsTwoFactor: (BOOL) supportsTwoFactor;  // throws EDAMUserException *, EDAMSystemException *, TException
- (EDAMAuthenticationResult *) authenticateLongSession: (NSString *) username password: (NSString *) password consumerKey: (NSString *) consumerKey consumerSecret: (NSString *) consumerSecret deviceIdentifier: (NSString *) deviceIdentifier deviceDescription: (NSString *) deviceDescription supportsTwoFactor: (BOOL) supportsTwoFactor;  // throws EDAMUserException *, EDAMSystemException *, TException
- (EDAMAuthenticationResult *) completeTwoFactorAuthentication: (NSString *) authenticationToken oneTimeCode: (NSString *) oneTimeCode deviceIdentifier: (NSString *) deviceIdentifier deviceDescription: (NSString *) deviceDescription;  // throws EDAMUserException *, EDAMSystemException *, TException
- (void) revokeLongSession: (NSString *) authenticationToken;  // throws EDAMUserException *, EDAMSystemException *, TException
- (EDAMAuthenticationResult *) authenticateToBusiness: (NSString *) authenticationToken;  // throws EDAMUserException *, EDAMSystemException *, TException
- (EDAMAuthenticationResult *) refreshAuthentication: (NSString *) authenticationToken;  // throws EDAMUserException *, EDAMSystemException *, TException
- (EDAMUser *) getUser: (NSString *) authenticationToken;  // throws EDAMUserException *, EDAMSystemException *, TException
- (EDAMPublicUserInfo *) getPublicUserInfo: (NSString *) username;  // throws EDAMNotFoundException *, EDAMSystemException *, EDAMUserException *, TException
- (EDAMPremiumInfo *) getPremiumInfo: (NSString *) authenticationToken;  // throws EDAMUserException *, EDAMSystemException *, TException
- (NSString *) getNoteStoreUrl: (NSString *) authenticationToken;  // throws EDAMUserException *, EDAMSystemException *, TException
@end

@interface EDAMUserStoreClient : NSObject <EDAMUserStore> {
  id <TProtocol> inProtocol;
  id <TProtocol> outProtocol;
}
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface EDAMUserStoreProcessor : NSObject <TProcessor> {
  id <EDAMUserStore> mService;
  NSDictionary * mMethodMap;
}
- (id) initWithUserStore: (id <EDAMUserStore>) service;
- (id<EDAMUserStore>) service;
@end

@interface EDAMUserStoreConstants : NSObject {
}
+ (int16_t) EDAM_VERSION_MAJOR;
+ (int16_t) EDAM_VERSION_MINOR;
@end
